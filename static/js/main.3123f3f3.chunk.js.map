{"version":3,"sources":["App.module.css","components/Chart/Chart.module.css","components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","Styles","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3123f3f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Ntftf\",\"image\":\"App_image__1KB5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3W2s0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3cu02\",\"card\":\"Cards_card__cZUm0\",\"infected\":\"Cards_infected__3QW6j\",\"recovered\":\"Cards_recovered__1hyZW\",\"deaths\":\"Cards_deaths__1_m10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__CXMK7\"};","import React from 'react'\r\nimport {Card,CardContent,Typography,Grid} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\" \r\n\r\nconst Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=> {\r\n    if(!confirmed){\r\n        return 'loading...';\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n           <Grid container spacing={3} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                       <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.5} seperator=\",\"/>\r\n                        </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\r\n                       </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                       <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} seperator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of recoveries from covid-19</Typography>\r\n                       </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                       <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} seperator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of deaths caused by covid-19</Typography>\r\n                       </CardContent>\r\n               </Grid>\r\n           </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n ","import axios from \"axios\";\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData=async(country)=>{\r\n    let changeableUrl=url;\r\n\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\ntry{\r\n    const {data:{confirmed,recovered,deaths,lastUpdate}}=await axios.get(changeableUrl);\r\n    return {confirmed,recovered,deaths,lastUpdate};\r\n}\r\ncatch(error){\r\n  console.log(error);\r\n}\r\n}\r\nexport const fetchDailyData =async()=>{\r\n    try{\r\n        const { data }=await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries=async()=>{\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) =>country.name);\r\n}\r\ncatch(error){\r\n    console.log(error);    \r\n}\r\n}","import React,{useState,useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line,Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart=({data:{confirmed,deaths,recovered},country})=> {\r\n    const [dailyData,setDailyData]=useState([]);\r\n     \r\n    useEffect(() =>{\r\n        const fetchAPI= async()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart=(\r\n        dailyData.length\r\n        ? (\r\n            <Line\r\n            data={{\r\n                labels:dailyData.map(({date}) => date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed}) => confirmed),\r\n                    label:'infected',\r\n                    borderColor:\"#3333ff\",\r\n                    fill:true,\r\n                },{\r\n                    data:dailyData.map(({deaths}) => deaths),\r\n                    label:\"Deaths\",\r\n                    borderColor:\"red\",\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n\r\n                }]\r\n            }}\r\n        />) :null\r\n    );\r\n\r\n    console.log(confirmed,recovered,deaths);\r\n\r\n    const barChart =(\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n            data={{\r\n             labels:['Infected','Recovered','Deaths'],\r\n             datasets:[{\r\n             label:'People',\r\n             backgroundColor:[\r\n                'rgba(0,0,255,0.5)',\r\n                 'rgba(0,255,0,0.5)',\r\n                 'rgba(255,0,0,0.5)',\r\n            ],\r\n            data:[confirmed.value,recovered.value,deaths.value]\r\n             }]   \r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current State in ${country}`},\r\n            }}\r\n            />\r\n            \r\n        ) : null\r\n        );\r\n    \r\n     \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n ","import React,{useState,useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker=({handleCountryChange})=> {\r\n      const [fetchedCountries,setFetchedCountries]=useState([]);\r\n      useEffect(() =>{\r\n          const fetchAPI =async () =>{\r\n              setFetchedCountries(await fetchCountries());\r\n          }\r\n          fetchAPI();\r\n      },[setFetchedCountries]);\r\n\r\n     \r\n    return (\r\n       <FormControl>\r\n           <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n               <option value=\"\">Global</option>\r\n               {fetchedCountries.map((country,i)=><option key={i} value={country}>{country} </option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from \"react\";\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport Styles from \"./App.module.css\";\r\nimport {fetchData} from \"./api\";\r\nimport coronaImage from './images/image.png'; \r\n\r\nclass App extends React.Component{\r\n    state={\r\n        data:{},\r\n        country:'',\r\n}\r\n\r\n    async componentDidMount(){\r\n        const fetchedData=await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n    handleCountryChange = async(country)=>{\r\n        const fetchedData=await fetchData(country);\r\n        this.setState({data:fetchedData, country:country});\r\n    }\r\n\r\n    render(){\r\n        const {data,country}=this.state;\r\n\r\n        return(\r\n             <div className={Styles.container}>\r\n                 <img className={Styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                 <Cards data={data} />\r\n             <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n             <Chart data={data} country={country}/>\r\n             </div> \r\n        )\r\n    }\r\n}\r\nexport default App;","import { getByTestId } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nReactDOM.render(<>\r\n    <App/>\r\n</>,document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}